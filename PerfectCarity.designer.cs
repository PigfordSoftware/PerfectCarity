#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PerfectCarity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PerfectCarity")]
	public partial class PerfectCarityDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCarityUser(CarityUser instance);
    partial void UpdateCarityUser(CarityUser instance);
    partial void DeleteCarityUser(CarityUser instance);
    partial void InsertProfile(Profile instance);
    partial void UpdateProfile(Profile instance);
    partial void DeleteProfile(Profile instance);
    partial void InsertEntry(Entry instance);
    partial void UpdateEntry(Entry instance);
    partial void DeleteEntry(Entry instance);
    partial void InsertEntryType(EntryType instance);
    partial void UpdateEntryType(EntryType instance);
    partial void DeleteEntryType(EntryType instance);
    partial void InsertGoal(Goal instance);
    partial void UpdateGoal(Goal instance);
    partial void DeleteGoal(Goal instance);
    partial void InsertProfileAccess(ProfileAccess instance);
    partial void UpdateProfileAccess(ProfileAccess instance);
    partial void DeleteProfileAccess(ProfileAccess instance);
    partial void InsertImage(Image instance);
    partial void UpdateImage(Image instance);
    partial void DeleteImage(Image instance);
    #endregion
		
		public PerfectCarityDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PerfectCarityConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PerfectCarityDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PerfectCarityDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PerfectCarityDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PerfectCarityDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CarityUser> CarityUsers
		{
			get
			{
				return this.GetTable<CarityUser>();
			}
		}
		
		public System.Data.Linq.Table<Profile> Profiles
		{
			get
			{
				return this.GetTable<Profile>();
			}
		}
		
		public System.Data.Linq.Table<Entry> Entries
		{
			get
			{
				return this.GetTable<Entry>();
			}
		}
		
		public System.Data.Linq.Table<EntryType> EntryTypes
		{
			get
			{
				return this.GetTable<EntryType>();
			}
		}
		
		public System.Data.Linq.Table<Goal> Goals
		{
			get
			{
				return this.GetTable<Goal>();
			}
		}
		
		public System.Data.Linq.Table<ProfileAccess> ProfileAccesses
		{
			get
			{
				return this.GetTable<ProfileAccess>();
			}
		}
		
		public System.Data.Linq.Table<Image> Images
		{
			get
			{
				return this.GetTable<Image>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarityUsers")]
	public partial class CarityUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private string _password;
		
		private string _email_addr;
		
		private int _security_question_1;
		
		private string _security_answer_1;
		
		private int _security_question_2;
		
		private string _security_answer_2;
		
		private string _name;
		
		private System.Nullable<int> _image_id;
		
		private bool _locked_indc;
		
		private EntitySet<Profile> _Profiles;
		
		private EntitySet<Entry> _Entries;
		
		private EntitySet<EntryType> _EntryTypes;
		
		private EntitySet<ProfileAccess> _ProfileAccesses;
		
		private EntitySet<Image> _Images;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onemail_addrChanging(string value);
    partial void Onemail_addrChanged();
    partial void Onsecurity_question_1Changing(int value);
    partial void Onsecurity_question_1Changed();
    partial void Onsecurity_answer_1Changing(string value);
    partial void Onsecurity_answer_1Changed();
    partial void Onsecurity_question_2Changing(int value);
    partial void Onsecurity_question_2Changed();
    partial void Onsecurity_answer_2Changing(string value);
    partial void Onsecurity_answer_2Changed();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onimage_idChanging(System.Nullable<int> value);
    partial void Onimage_idChanged();
    partial void Onlocked_indcChanging(bool value);
    partial void Onlocked_indcChanged();
    #endregion
		
		public CarityUser()
		{
			this._Profiles = new EntitySet<Profile>(new Action<Profile>(this.attach_Profiles), new Action<Profile>(this.detach_Profiles));
			this._Entries = new EntitySet<Entry>(new Action<Entry>(this.attach_Entries), new Action<Entry>(this.detach_Entries));
			this._EntryTypes = new EntitySet<EntryType>(new Action<EntryType>(this.attach_EntryTypes), new Action<EntryType>(this.detach_EntryTypes));
			this._ProfileAccesses = new EntitySet<ProfileAccess>(new Action<ProfileAccess>(this.attach_ProfileAccesses), new Action<ProfileAccess>(this.detach_ProfileAccesses));
			this._Images = new EntitySet<Image>(new Action<Image>(this.attach_Images), new Action<Image>(this.detach_Images));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email_addr", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string email_addr
		{
			get
			{
				return this._email_addr;
			}
			set
			{
				if ((this._email_addr != value))
				{
					this.Onemail_addrChanging(value);
					this.SendPropertyChanging();
					this._email_addr = value;
					this.SendPropertyChanged("email_addr");
					this.Onemail_addrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_security_question_1", DbType="Int NOT NULL")]
		public int security_question_1
		{
			get
			{
				return this._security_question_1;
			}
			set
			{
				if ((this._security_question_1 != value))
				{
					this.Onsecurity_question_1Changing(value);
					this.SendPropertyChanging();
					this._security_question_1 = value;
					this.SendPropertyChanged("security_question_1");
					this.Onsecurity_question_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_security_answer_1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string security_answer_1
		{
			get
			{
				return this._security_answer_1;
			}
			set
			{
				if ((this._security_answer_1 != value))
				{
					this.Onsecurity_answer_1Changing(value);
					this.SendPropertyChanging();
					this._security_answer_1 = value;
					this.SendPropertyChanged("security_answer_1");
					this.Onsecurity_answer_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_security_question_2", DbType="Int NOT NULL")]
		public int security_question_2
		{
			get
			{
				return this._security_question_2;
			}
			set
			{
				if ((this._security_question_2 != value))
				{
					this.Onsecurity_question_2Changing(value);
					this.SendPropertyChanging();
					this._security_question_2 = value;
					this.SendPropertyChanged("security_question_2");
					this.Onsecurity_question_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_security_answer_2", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string security_answer_2
		{
			get
			{
				return this._security_answer_2;
			}
			set
			{
				if ((this._security_answer_2 != value))
				{
					this.Onsecurity_answer_2Changing(value);
					this.SendPropertyChanging();
					this._security_answer_2 = value;
					this.SendPropertyChanged("security_answer_2");
					this.Onsecurity_answer_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_id", DbType="Int")]
		public System.Nullable<int> image_id
		{
			get
			{
				return this._image_id;
			}
			set
			{
				if ((this._image_id != value))
				{
					this.Onimage_idChanging(value);
					this.SendPropertyChanging();
					this._image_id = value;
					this.SendPropertyChanged("image_id");
					this.Onimage_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locked_indc", DbType="Bit NOT NULL")]
		public bool locked_indc
		{
			get
			{
				return this._locked_indc;
			}
			set
			{
				if ((this._locked_indc != value))
				{
					this.Onlocked_indcChanging(value);
					this.SendPropertyChanging();
					this._locked_indc = value;
					this.SendPropertyChanged("locked_indc");
					this.Onlocked_indcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarityUser_Profile", Storage="_Profiles", ThisKey="username", OtherKey="username")]
		public EntitySet<Profile> Profiles
		{
			get
			{
				return this._Profiles;
			}
			set
			{
				this._Profiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarityUser_Entry", Storage="_Entries", ThisKey="username", OtherKey="username")]
		public EntitySet<Entry> Entries
		{
			get
			{
				return this._Entries;
			}
			set
			{
				this._Entries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarityUser_EntryType", Storage="_EntryTypes", ThisKey="username", OtherKey="username")]
		public EntitySet<EntryType> EntryTypes
		{
			get
			{
				return this._EntryTypes;
			}
			set
			{
				this._EntryTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarityUser_ProfileAccess", Storage="_ProfileAccesses", ThisKey="username", OtherKey="username")]
		public EntitySet<ProfileAccess> ProfileAccesses
		{
			get
			{
				return this._ProfileAccesses;
			}
			set
			{
				this._ProfileAccesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarityUser_Image", Storage="_Images", ThisKey="username", OtherKey="username")]
		public EntitySet<Image> Images
		{
			get
			{
				return this._Images;
			}
			set
			{
				this._Images.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Profiles(Profile entity)
		{
			this.SendPropertyChanging();
			entity.CarityUser = this;
		}
		
		private void detach_Profiles(Profile entity)
		{
			this.SendPropertyChanging();
			entity.CarityUser = null;
		}
		
		private void attach_Entries(Entry entity)
		{
			this.SendPropertyChanging();
			entity.CarityUser = this;
		}
		
		private void detach_Entries(Entry entity)
		{
			this.SendPropertyChanging();
			entity.CarityUser = null;
		}
		
		private void attach_EntryTypes(EntryType entity)
		{
			this.SendPropertyChanging();
			entity.CarityUser = this;
		}
		
		private void detach_EntryTypes(EntryType entity)
		{
			this.SendPropertyChanging();
			entity.CarityUser = null;
		}
		
		private void attach_ProfileAccesses(ProfileAccess entity)
		{
			this.SendPropertyChanging();
			entity.CarityUser = this;
		}
		
		private void detach_ProfileAccesses(ProfileAccess entity)
		{
			this.SendPropertyChanging();
			entity.CarityUser = null;
		}
		
		private void attach_Images(Image entity)
		{
			this.SendPropertyChanging();
			entity.CarityUser = this;
		}
		
		private void detach_Images(Image entity)
		{
			this.SendPropertyChanging();
			entity.CarityUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Profiles")]
	public partial class Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _profile_id;
		
		private string _name;
		
		private System.Nullable<int> _image_id;
		
		private string _username;
		
		private string _access_key;
		
		private EntitySet<Entry> _Entries;
		
		private EntitySet<Goal> _Goals;
		
		private EntitySet<ProfileAccess> _ProfileAccesses;
		
		private EntitySet<Image> _Images;
		
		private EntityRef<CarityUser> _CarityUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onprofile_idChanging(int value);
    partial void Onprofile_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onimage_idChanging(System.Nullable<int> value);
    partial void Onimage_idChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void Onaccess_keyChanging(string value);
    partial void Onaccess_keyChanged();
    #endregion
		
		public Profile()
		{
			this._Entries = new EntitySet<Entry>(new Action<Entry>(this.attach_Entries), new Action<Entry>(this.detach_Entries));
			this._Goals = new EntitySet<Goal>(new Action<Goal>(this.attach_Goals), new Action<Goal>(this.detach_Goals));
			this._ProfileAccesses = new EntitySet<ProfileAccess>(new Action<ProfileAccess>(this.attach_ProfileAccesses), new Action<ProfileAccess>(this.detach_ProfileAccesses));
			this._Images = new EntitySet<Image>(new Action<Image>(this.attach_Images), new Action<Image>(this.detach_Images));
			this._CarityUser = default(EntityRef<CarityUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profile_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int profile_id
		{
			get
			{
				return this._profile_id;
			}
			set
			{
				if ((this._profile_id != value))
				{
					this.Onprofile_idChanging(value);
					this.SendPropertyChanging();
					this._profile_id = value;
					this.SendPropertyChanged("profile_id");
					this.Onprofile_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_id", DbType="Int")]
		public System.Nullable<int> image_id
		{
			get
			{
				return this._image_id;
			}
			set
			{
				if ((this._image_id != value))
				{
					this.Onimage_idChanging(value);
					this.SendPropertyChanging();
					this._image_id = value;
					this.SendPropertyChanged("image_id");
					this.Onimage_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._CarityUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_access_key", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string access_key
		{
			get
			{
				return this._access_key;
			}
			set
			{
				if ((this._access_key != value))
				{
					this.Onaccess_keyChanging(value);
					this.SendPropertyChanging();
					this._access_key = value;
					this.SendPropertyChanged("access_key");
					this.Onaccess_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_Entry", Storage="_Entries", ThisKey="profile_id", OtherKey="profile_id")]
		public EntitySet<Entry> Entries
		{
			get
			{
				return this._Entries;
			}
			set
			{
				this._Entries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_Goal", Storage="_Goals", ThisKey="profile_id", OtherKey="profile_id")]
		public EntitySet<Goal> Goals
		{
			get
			{
				return this._Goals;
			}
			set
			{
				this._Goals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_ProfileAccess", Storage="_ProfileAccesses", ThisKey="profile_id", OtherKey="profile_id")]
		public EntitySet<ProfileAccess> ProfileAccesses
		{
			get
			{
				return this._ProfileAccesses;
			}
			set
			{
				this._ProfileAccesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_Image", Storage="_Images", ThisKey="profile_id", OtherKey="profile_id")]
		public EntitySet<Image> Images
		{
			get
			{
				return this._Images;
			}
			set
			{
				this._Images.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarityUser_Profile", Storage="_CarityUser", ThisKey="username", OtherKey="username", IsForeignKey=true)]
		public CarityUser CarityUser
		{
			get
			{
				return this._CarityUser.Entity;
			}
			set
			{
				CarityUser previousValue = this._CarityUser.Entity;
				if (((previousValue != value) 
							|| (this._CarityUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarityUser.Entity = null;
						previousValue.Profiles.Remove(this);
					}
					this._CarityUser.Entity = value;
					if ((value != null))
					{
						value.Profiles.Add(this);
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("CarityUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Entries(Entry entity)
		{
			this.SendPropertyChanging();
			entity.Profile = this;
		}
		
		private void detach_Entries(Entry entity)
		{
			this.SendPropertyChanging();
			entity.Profile = null;
		}
		
		private void attach_Goals(Goal entity)
		{
			this.SendPropertyChanging();
			entity.Profile = this;
		}
		
		private void detach_Goals(Goal entity)
		{
			this.SendPropertyChanging();
			entity.Profile = null;
		}
		
		private void attach_ProfileAccesses(ProfileAccess entity)
		{
			this.SendPropertyChanging();
			entity.Profile = this;
		}
		
		private void detach_ProfileAccesses(ProfileAccess entity)
		{
			this.SendPropertyChanging();
			entity.Profile = null;
		}
		
		private void attach_Images(Image entity)
		{
			this.SendPropertyChanging();
			entity.Profile = this;
		}
		
		private void detach_Images(Image entity)
		{
			this.SendPropertyChanging();
			entity.Profile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Entries")]
	public partial class Entry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _entry_id;
		
		private int _profile_id;
		
		private int _entry_type_id;
		
		private int _behavior_type;
		
		private string _username;
		
		private string _text;
		
		private System.DateTime _entry_date;
		
		private System.TimeSpan _entry_time;
		
		private System.DateTime _create_date;
		
		private EntitySet<Image> _Images;
		
		private EntityRef<CarityUser> _CarityUser;
		
		private EntityRef<Profile> _Profile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onentry_idChanging(int value);
    partial void Onentry_idChanged();
    partial void Onprofile_idChanging(int value);
    partial void Onprofile_idChanged();
    partial void Onentry_type_idChanging(int value);
    partial void Onentry_type_idChanged();
    partial void Onbehavior_typeChanging(int value);
    partial void Onbehavior_typeChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void Onentry_dateChanging(System.DateTime value);
    partial void Onentry_dateChanged();
    partial void Onentry_timeChanging(System.TimeSpan value);
    partial void Onentry_timeChanged();
    partial void Oncreate_dateChanging(System.DateTime value);
    partial void Oncreate_dateChanged();
    #endregion
		
		public Entry()
		{
			this._Images = new EntitySet<Image>(new Action<Image>(this.attach_Images), new Action<Image>(this.detach_Images));
			this._CarityUser = default(EntityRef<CarityUser>);
			this._Profile = default(EntityRef<Profile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entry_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int entry_id
		{
			get
			{
				return this._entry_id;
			}
			set
			{
				if ((this._entry_id != value))
				{
					this.Onentry_idChanging(value);
					this.SendPropertyChanging();
					this._entry_id = value;
					this.SendPropertyChanged("entry_id");
					this.Onentry_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profile_id", DbType="Int NOT NULL")]
		public int profile_id
		{
			get
			{
				return this._profile_id;
			}
			set
			{
				if ((this._profile_id != value))
				{
					if (this._Profile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onprofile_idChanging(value);
					this.SendPropertyChanging();
					this._profile_id = value;
					this.SendPropertyChanged("profile_id");
					this.Onprofile_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entry_type_id", DbType="Int NOT NULL")]
		public int entry_type_id
		{
			get
			{
				return this._entry_type_id;
			}
			set
			{
				if ((this._entry_type_id != value))
				{
					this.Onentry_type_idChanging(value);
					this.SendPropertyChanging();
					this._entry_type_id = value;
					this.SendPropertyChanged("entry_type_id");
					this.Onentry_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_behavior_type", DbType="Int NOT NULL")]
		public int behavior_type
		{
			get
			{
				return this._behavior_type;
			}
			set
			{
				if ((this._behavior_type != value))
				{
					this.Onbehavior_typeChanging(value);
					this.SendPropertyChanging();
					this._behavior_type = value;
					this.SendPropertyChanged("behavior_type");
					this.Onbehavior_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._CarityUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="VarChar(2000)")]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entry_date", DbType="Date NOT NULL")]
		public System.DateTime entry_date
		{
			get
			{
				return this._entry_date;
			}
			set
			{
				if ((this._entry_date != value))
				{
					this.Onentry_dateChanging(value);
					this.SendPropertyChanging();
					this._entry_date = value;
					this.SendPropertyChanged("entry_date");
					this.Onentry_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entry_time", DbType="Time NOT NULL")]
		public System.TimeSpan entry_time
		{
			get
			{
				return this._entry_time;
			}
			set
			{
				if ((this._entry_time != value))
				{
					this.Onentry_timeChanging(value);
					this.SendPropertyChanging();
					this._entry_time = value;
					this.SendPropertyChanged("entry_time");
					this.Onentry_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_date", DbType="DateTime NOT NULL")]
		public System.DateTime create_date
		{
			get
			{
				return this._create_date;
			}
			set
			{
				if ((this._create_date != value))
				{
					this.Oncreate_dateChanging(value);
					this.SendPropertyChanging();
					this._create_date = value;
					this.SendPropertyChanged("create_date");
					this.Oncreate_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entry_Image", Storage="_Images", ThisKey="entry_id", OtherKey="entry_id")]
		public EntitySet<Image> Images
		{
			get
			{
				return this._Images;
			}
			set
			{
				this._Images.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarityUser_Entry", Storage="_CarityUser", ThisKey="username", OtherKey="username", IsForeignKey=true)]
		public CarityUser CarityUser
		{
			get
			{
				return this._CarityUser.Entity;
			}
			set
			{
				CarityUser previousValue = this._CarityUser.Entity;
				if (((previousValue != value) 
							|| (this._CarityUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarityUser.Entity = null;
						previousValue.Entries.Remove(this);
					}
					this._CarityUser.Entity = value;
					if ((value != null))
					{
						value.Entries.Add(this);
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("CarityUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_Entry", Storage="_Profile", ThisKey="profile_id", OtherKey="profile_id", IsForeignKey=true)]
		public Profile Profile
		{
			get
			{
				return this._Profile.Entity;
			}
			set
			{
				Profile previousValue = this._Profile.Entity;
				if (((previousValue != value) 
							|| (this._Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profile.Entity = null;
						previousValue.Entries.Remove(this);
					}
					this._Profile.Entity = value;
					if ((value != null))
					{
						value.Entries.Add(this);
						this._profile_id = value.profile_id;
					}
					else
					{
						this._profile_id = default(int);
					}
					this.SendPropertyChanged("Profile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Images(Image entity)
		{
			this.SendPropertyChanging();
			entity.Entry = this;
		}
		
		private void detach_Images(Image entity)
		{
			this.SendPropertyChanging();
			entity.Entry = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntryTypes")]
	public partial class EntryType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _entry_type_id;
		
		private string _username;
		
		private string _text;
		
		private bool _system_default;
		
		private EntityRef<CarityUser> _CarityUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onentry_type_idChanging(int value);
    partial void Onentry_type_idChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void Onsystem_defaultChanging(bool value);
    partial void Onsystem_defaultChanged();
    #endregion
		
		public EntryType()
		{
			this._CarityUser = default(EntityRef<CarityUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entry_type_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int entry_type_id
		{
			get
			{
				return this._entry_type_id;
			}
			set
			{
				if ((this._entry_type_id != value))
				{
					this.Onentry_type_idChanging(value);
					this.SendPropertyChanging();
					this._entry_type_id = value;
					this.SendPropertyChanged("entry_type_id");
					this.Onentry_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._CarityUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_system_default", DbType="Bit NOT NULL")]
		public bool system_default
		{
			get
			{
				return this._system_default;
			}
			set
			{
				if ((this._system_default != value))
				{
					this.Onsystem_defaultChanging(value);
					this.SendPropertyChanging();
					this._system_default = value;
					this.SendPropertyChanged("system_default");
					this.Onsystem_defaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarityUser_EntryType", Storage="_CarityUser", ThisKey="username", OtherKey="username", IsForeignKey=true)]
		public CarityUser CarityUser
		{
			get
			{
				return this._CarityUser.Entity;
			}
			set
			{
				CarityUser previousValue = this._CarityUser.Entity;
				if (((previousValue != value) 
							|| (this._CarityUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarityUser.Entity = null;
						previousValue.EntryTypes.Remove(this);
					}
					this._CarityUser.Entity = value;
					if ((value != null))
					{
						value.EntryTypes.Add(this);
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("CarityUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Goals")]
	public partial class Goal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _goal_id;
		
		private int _profile_id;
		
		private string _text;
		
		private System.DateTime _goal_start_date;
		
		private System.Nullable<System.DateTime> _goal_end_date;
		
		private int _goal_type_id;
		
		private int _entry_totals_1;
		
		private int _entry_totals_2;
		
		private EntityRef<Profile> _Profile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongoal_idChanging(int value);
    partial void Ongoal_idChanged();
    partial void Onprofile_idChanging(int value);
    partial void Onprofile_idChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void Ongoal_start_dateChanging(System.DateTime value);
    partial void Ongoal_start_dateChanged();
    partial void Ongoal_end_dateChanging(System.Nullable<System.DateTime> value);
    partial void Ongoal_end_dateChanged();
    partial void Ongoal_type_idChanging(int value);
    partial void Ongoal_type_idChanged();
    partial void Onentry_totals_1Changing(int value);
    partial void Onentry_totals_1Changed();
    partial void Onentry_totals_2Changing(int value);
    partial void Onentry_totals_2Changed();
    #endregion
		
		public Goal()
		{
			this._Profile = default(EntityRef<Profile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goal_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int goal_id
		{
			get
			{
				return this._goal_id;
			}
			set
			{
				if ((this._goal_id != value))
				{
					this.Ongoal_idChanging(value);
					this.SendPropertyChanging();
					this._goal_id = value;
					this.SendPropertyChanged("goal_id");
					this.Ongoal_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profile_id", DbType="Int NOT NULL")]
		public int profile_id
		{
			get
			{
				return this._profile_id;
			}
			set
			{
				if ((this._profile_id != value))
				{
					if (this._Profile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onprofile_idChanging(value);
					this.SendPropertyChanging();
					this._profile_id = value;
					this.SendPropertyChanged("profile_id");
					this.Onprofile_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goal_start_date", DbType="DateTime NOT NULL")]
		public System.DateTime goal_start_date
		{
			get
			{
				return this._goal_start_date;
			}
			set
			{
				if ((this._goal_start_date != value))
				{
					this.Ongoal_start_dateChanging(value);
					this.SendPropertyChanging();
					this._goal_start_date = value;
					this.SendPropertyChanged("goal_start_date");
					this.Ongoal_start_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goal_end_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> goal_end_date
		{
			get
			{
				return this._goal_end_date;
			}
			set
			{
				if ((this._goal_end_date != value))
				{
					this.Ongoal_end_dateChanging(value);
					this.SendPropertyChanging();
					this._goal_end_date = value;
					this.SendPropertyChanged("goal_end_date");
					this.Ongoal_end_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goal_type_id", DbType="Int NOT NULL")]
		public int goal_type_id
		{
			get
			{
				return this._goal_type_id;
			}
			set
			{
				if ((this._goal_type_id != value))
				{
					this.Ongoal_type_idChanging(value);
					this.SendPropertyChanging();
					this._goal_type_id = value;
					this.SendPropertyChanged("goal_type_id");
					this.Ongoal_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entry_totals_1", DbType="Int NOT NULL")]
		public int entry_totals_1
		{
			get
			{
				return this._entry_totals_1;
			}
			set
			{
				if ((this._entry_totals_1 != value))
				{
					this.Onentry_totals_1Changing(value);
					this.SendPropertyChanging();
					this._entry_totals_1 = value;
					this.SendPropertyChanged("entry_totals_1");
					this.Onentry_totals_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entry_totals_2", DbType="Int NOT NULL")]
		public int entry_totals_2
		{
			get
			{
				return this._entry_totals_2;
			}
			set
			{
				if ((this._entry_totals_2 != value))
				{
					this.Onentry_totals_2Changing(value);
					this.SendPropertyChanging();
					this._entry_totals_2 = value;
					this.SendPropertyChanged("entry_totals_2");
					this.Onentry_totals_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_Goal", Storage="_Profile", ThisKey="profile_id", OtherKey="profile_id", IsForeignKey=true)]
		public Profile Profile
		{
			get
			{
				return this._Profile.Entity;
			}
			set
			{
				Profile previousValue = this._Profile.Entity;
				if (((previousValue != value) 
							|| (this._Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profile.Entity = null;
						previousValue.Goals.Remove(this);
					}
					this._Profile.Entity = value;
					if ((value != null))
					{
						value.Goals.Add(this);
						this._profile_id = value.profile_id;
					}
					else
					{
						this._profile_id = default(int);
					}
					this.SendPropertyChanged("Profile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProfileAccess")]
	public partial class ProfileAccess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _access_key;
		
		private int _profile_id;
		
		private string _username;
		
		private int _access_code;
		
		private EntityRef<CarityUser> _CarityUser;
		
		private EntityRef<Profile> _Profile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onaccess_keyChanging(string value);
    partial void Onaccess_keyChanged();
    partial void Onprofile_idChanging(int value);
    partial void Onprofile_idChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void Onaccess_codeChanging(int value);
    partial void Onaccess_codeChanged();
    #endregion
		
		public ProfileAccess()
		{
			this._CarityUser = default(EntityRef<CarityUser>);
			this._Profile = default(EntityRef<Profile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_access_key", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string access_key
		{
			get
			{
				return this._access_key;
			}
			set
			{
				if ((this._access_key != value))
				{
					this.Onaccess_keyChanging(value);
					this.SendPropertyChanging();
					this._access_key = value;
					this.SendPropertyChanged("access_key");
					this.Onaccess_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profile_id", DbType="Int NOT NULL")]
		public int profile_id
		{
			get
			{
				return this._profile_id;
			}
			set
			{
				if ((this._profile_id != value))
				{
					if (this._Profile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onprofile_idChanging(value);
					this.SendPropertyChanging();
					this._profile_id = value;
					this.SendPropertyChanged("profile_id");
					this.Onprofile_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(25)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._CarityUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_access_code", DbType="Int NOT NULL")]
		public int access_code
		{
			get
			{
				return this._access_code;
			}
			set
			{
				if ((this._access_code != value))
				{
					this.Onaccess_codeChanging(value);
					this.SendPropertyChanging();
					this._access_code = value;
					this.SendPropertyChanged("access_code");
					this.Onaccess_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarityUser_ProfileAccess", Storage="_CarityUser", ThisKey="username", OtherKey="username", IsForeignKey=true)]
		public CarityUser CarityUser
		{
			get
			{
				return this._CarityUser.Entity;
			}
			set
			{
				CarityUser previousValue = this._CarityUser.Entity;
				if (((previousValue != value) 
							|| (this._CarityUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarityUser.Entity = null;
						previousValue.ProfileAccesses.Remove(this);
					}
					this._CarityUser.Entity = value;
					if ((value != null))
					{
						value.ProfileAccesses.Add(this);
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("CarityUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_ProfileAccess", Storage="_Profile", ThisKey="profile_id", OtherKey="profile_id", IsForeignKey=true)]
		public Profile Profile
		{
			get
			{
				return this._Profile.Entity;
			}
			set
			{
				Profile previousValue = this._Profile.Entity;
				if (((previousValue != value) 
							|| (this._Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profile.Entity = null;
						previousValue.ProfileAccesses.Remove(this);
					}
					this._Profile.Entity = value;
					if ((value != null))
					{
						value.ProfileAccesses.Add(this);
						this._profile_id = value.profile_id;
					}
					else
					{
						this._profile_id = default(int);
					}
					this.SendPropertyChanged("Profile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Images")]
	public partial class Image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _image_id;
		
		private int _profile_id;
		
		private int _entry_id;
		
		private string _username;
		
		private System.Data.Linq.Binary _image1;
		
		private int _size;
		
		private EntityRef<CarityUser> _CarityUser;
		
		private EntityRef<Entry> _Entry;
		
		private EntityRef<Profile> _Profile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onimage_idChanging(int value);
    partial void Onimage_idChanged();
    partial void Onprofile_idChanging(int value);
    partial void Onprofile_idChanged();
    partial void Onentry_idChanging(int value);
    partial void Onentry_idChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void Onimage1Changing(System.Data.Linq.Binary value);
    partial void Onimage1Changed();
    partial void OnsizeChanging(int value);
    partial void OnsizeChanged();
    #endregion
		
		public Image()
		{
			this._CarityUser = default(EntityRef<CarityUser>);
			this._Entry = default(EntityRef<Entry>);
			this._Profile = default(EntityRef<Profile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int image_id
		{
			get
			{
				return this._image_id;
			}
			set
			{
				if ((this._image_id != value))
				{
					this.Onimage_idChanging(value);
					this.SendPropertyChanging();
					this._image_id = value;
					this.SendPropertyChanged("image_id");
					this.Onimage_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profile_id", DbType="Int NOT NULL")]
		public int profile_id
		{
			get
			{
				return this._profile_id;
			}
			set
			{
				if ((this._profile_id != value))
				{
					if (this._Profile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onprofile_idChanging(value);
					this.SendPropertyChanging();
					this._profile_id = value;
					this.SendPropertyChanged("profile_id");
					this.Onprofile_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entry_id", DbType="Int NOT NULL")]
		public int entry_id
		{
			get
			{
				return this._entry_id;
			}
			set
			{
				if ((this._entry_id != value))
				{
					if (this._Entry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onentry_idChanging(value);
					this.SendPropertyChanging();
					this._entry_id = value;
					this.SendPropertyChanged("entry_id");
					this.Onentry_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._CarityUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="image", Storage="_image1", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary image1
		{
			get
			{
				return this._image1;
			}
			set
			{
				if ((this._image1 != value))
				{
					this.Onimage1Changing(value);
					this.SendPropertyChanging();
					this._image1 = value;
					this.SendPropertyChanged("image1");
					this.Onimage1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size", DbType="Int NOT NULL")]
		public int size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this.OnsizeChanging(value);
					this.SendPropertyChanging();
					this._size = value;
					this.SendPropertyChanged("size");
					this.OnsizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarityUser_Image", Storage="_CarityUser", ThisKey="username", OtherKey="username", IsForeignKey=true)]
		public CarityUser CarityUser
		{
			get
			{
				return this._CarityUser.Entity;
			}
			set
			{
				CarityUser previousValue = this._CarityUser.Entity;
				if (((previousValue != value) 
							|| (this._CarityUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarityUser.Entity = null;
						previousValue.Images.Remove(this);
					}
					this._CarityUser.Entity = value;
					if ((value != null))
					{
						value.Images.Add(this);
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("CarityUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entry_Image", Storage="_Entry", ThisKey="entry_id", OtherKey="entry_id", IsForeignKey=true)]
		public Entry Entry
		{
			get
			{
				return this._Entry.Entity;
			}
			set
			{
				Entry previousValue = this._Entry.Entity;
				if (((previousValue != value) 
							|| (this._Entry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entry.Entity = null;
						previousValue.Images.Remove(this);
					}
					this._Entry.Entity = value;
					if ((value != null))
					{
						value.Images.Add(this);
						this._entry_id = value.entry_id;
					}
					else
					{
						this._entry_id = default(int);
					}
					this.SendPropertyChanged("Entry");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_Image", Storage="_Profile", ThisKey="profile_id", OtherKey="profile_id", IsForeignKey=true)]
		public Profile Profile
		{
			get
			{
				return this._Profile.Entity;
			}
			set
			{
				Profile previousValue = this._Profile.Entity;
				if (((previousValue != value) 
							|| (this._Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profile.Entity = null;
						previousValue.Images.Remove(this);
					}
					this._Profile.Entity = value;
					if ((value != null))
					{
						value.Images.Add(this);
						this._profile_id = value.profile_id;
					}
					else
					{
						this._profile_id = default(int);
					}
					this.SendPropertyChanged("Profile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
